@import "../../../node_modules/sass-bem-constructor/dist/_bem-constructor.scss";
@import "_variables.scss";
@include object('view-border') {
  border-style: solid;
  border-width: 50px;
  -moz-border-image: url(../img/content_box-bg.png) 50 repeat;
  -webkit-border-image: url(../img/content_box-bg.png) 50 repeat;
  -o-border-image: url(../img/content_box-bg.png) 50 repeat;
  border-image: url(../img/content_box-bg.png) 50 fill repeat;
  @include breakpoint(case-medium) {
    border-width: 48px;
  }
  @include modifier('prompt') {
    height: 100%;
    border-width: 40px;
    -moz-border-image: url(../img/prompt_box.png) 40 stretch;
    -webkit-border-image: url(../img/prompt_box.png) 40 stretch;
    -o-border-image: url(../img/prompt_box.png) 40 stretch;
    border-image: url(../img/prompt_box.png) 40 fill stretch;
  }
  @include modifier('animated') {
    display: block;
    overflow: hidden;
    -webkit-transition: max-height 0.75s;
    -moz-transition: max-height 0.75s;
    -ms-transition: max-height 0.75s;
    -o-transition: max-height 0.75s;
    transition: max-height 0.75s;
    max-height: 0px;
  }
  @include element('solid-line') {
    box-shadow: inset 0px 0px 0px 1px $primary-color;
    @include modifier('read') {
      box-shadow: inset 0px 0px 0px 1px $primary-color;
      &:hover {
        background-color: rgba($primary-color, 0.2);
        box-shadow: inset 0px 0px 0px 3px $primary-color;
        cursor: pointer;
        transition: box-shadow .1s ease-in-out, background-color 0.15s ease-in-out;
      }
    }
    @include modifier('secondary') {
      box-shadow: inset 0px 0px 0px 1px $primary-color;
      &:hover {
        box-shadow: inset 0px 0px 0px 3px $primary-color;
        cursor: pointer;
        transition: all .1s ease-in-out;
      }
      @include state('selected') {
        box-shadow: inset 0px 0px 0px 3px $primary-color;
        background-color: rgba($primary-color, 0.2);
      }
      @include state('no-hover') {
        &:hover {
          box-shadow: inset 0px 0px 0px 1px $primary-color;
          cursor: auto;
        }
      }
    }
    @include modifier('tertiary') {
      box-shadow: inset 0px 0px 0px 1px $tertiary-color;
      &:hover {
        box-shadow: inset 0px 0px 0px 3px $tertiary-color;
        cursor: pointer;
        transition: all .1s ease-in-out;
      }
      @include state('selected') {
        box-shadow: inset 0px 0px 0px 3px $tertiary-color;
        background-color: rgba($color-aqua--light, 0.2);
      }
    }
    @include modifier('unselectable') {
      box-shadow: inset 0px 0px 0px 1px $primary-color;
      &:hover {
        cursor: default;
      }
    }
    @include modifier('new') {
      box-shadow: inset 0px 0px 0px 1px $color-yellow_corn;
      &:hover {
        box-shadow: inset 0px 0px 0px 3px $color-yellow_corn;
        cursor: pointer;
        transition: all .1s ease-in-out;
      }
    }
    @include modifier('remove') {
      box-shadow: inset 0px 0px 0px 1px $primary-color;
      &:hover {
        box-shadow: inset 0px 0px 0px 3px $color-delete;
        cursor: pointer;
        transition: all .1s ease-in-out;
      }
      @include state('selected') {
        box-shadow: inset 0px 0px 0px 3px $color-delete;
        background-color: rgba($color-delete, 0.2);
      }
    }
  }
  @include element('focus-border') {
    box-shadow: none;
    border: 1px solid rgba($primary-color, .4);
    &:hover {
      box-shadow: none;
      cursor: pointer;
    }
    @include modifier('no-hover') {
      cursor: auto !important;
    }
    @include state('unselectable') {
      cursor: auto;
    }
    @include modifier('new') {
      border: 1px solid rgba($color-warning, .4);
    }
    @include modifier('warning') {
      border: 1px solid rgba($color-delete, .4);
    }
    @include modifier('green') {
      border: 1px solid rgba($color-green_accept, .4);
    }
  }
  @include element('placeholder') {
    box-shadow: none;
    border: 1px dashed rgba($primary-color, .5);
    pointer-events: none;
    &:hover {
      box-shadow: none;
      cursor: default;
    }
  }
}

@include object('border') {
  @include modifier('primary') {
    border: 1px solid $color-basic_white;
  }
  @include modifier('secondary') {
    border: 1px solid $primary-color;
  }
}

@include object('focus-border') {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
  @include element('corners') {
    position: absolute;
    left: 0;
    width: 100%;
    height: 15px;
    z-index: 1;
    &::before,
    &::after {
      content: '';
      position: absolute;
      width: 8px;
      height: 8px;
      border-color: $primary-color;
      border-style: solid;
      -webkit-transition-duration: 0.2s;
      -moz-transition-duration: 0.2s;
      -o-transition-duration: 0.2s;
      transition-duration: 0.2s;
      -webkit-perspective: 1000;
      perspective: 1000;
      -webkit-transform: translateZ(0);
      -ms-transform: translateZ(0);
      transform: translateZ(0);
    }
    @include modifier('top') {
      top: 0;
      &::before {
        left: -1px;
        top: -1px;
        border-width: 1px 0px 0px 1px;
      }
      &::after {
        right: -1px;
        top: -1px;
        border-width: 1px 1px 0px 0px;
      }
    }
    @include modifier('bottom') {
      bottom: 0;
      &::before {
        left: -1px;
        bottom: -1px;
        border-width: 0px 0px 1px 1px;
      }
      &::after {
        right: -1px;
        bottom: -1px;
        border-width: 0px 1px 1px 0px;
      }
    }
  }
  &:hover {
    @include modifies-element('corners') {
      @include modifier('top') {
        &::before {
          left: 10px;
          top: 10px;
        }
        &::after {
          right: 10px;
          top: 10px;
        }
      }
      @include modifier('bottom') {
        &::before {
          left: 10px;
          bottom: 10px;
        }
        &::after {
          right: 10px;
          bottom: 10px;
        }
      }
    }
  }
  @include state('unselectable') {
    pointer-events: none;
    cursor: auto;
  }
  @include modifier('new') {
    @include modifies-element('corners') {
      &::before,
      &::after {
        border-color: $color-warning;
      }
    }
  }
  @include modifier('warning') {
    @include modifies-element('corners') {
      &::before,
      &::after {
        border-color: $color-delete;
      }
    }
  }
  @include modifier('green') {
    @include modifies-element('corners') {
      &::before,
      &::after {
        border-color: $color-green_accept;
      }
    }
  }
}